<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PizzaRestaurant.API</name>
    </assembly>
    <members>
        <member name="M:PizzaRestaurant.API.Controllers.AddressController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns address by id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>Specific address</returns>
            <response code="200">Returns the specific address data</response>
            <response code="404">If the address was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.AddressController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns list of addresses
            </summary>
            <param name="cancellationToken"></param>
            <returns>List of addresses</returns>
            <response code="200">Returns list of addresses</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.AddressController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.Addresses.Requests.AddressRequestModel)">
             <summary>
             Creates new address
             </summary>
            <remarks>
             Note id is not required
            
                     POST/Address
                 
                     {
                         "userId":1,
                         "city": "თბილისი",
                         "coutry": "საქართველო",
                         "region": "თბილისი",
                         "description": "აღწერა..."
                     }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <response code="200">Returns newly created address data</response>
             <response code="404">If the corresponding user was not found</response>
             <returns>Newly created address data</returns>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.AddressController.Put(System.Int32,System.Threading.CancellationToken,PizzaRestaurant.Application.Addresses.Requests.AddressRequestModel)">
             <summary>
             Updates a specific address
             </summary>
            <remarks>
            Note id is required
            
                     PUT/Address
                 
                     {
                         "userId":2,
                         "city": "Prague",
                         "coutry": "Czech Republic",
                         "region": "Region",
                         "description": "Desc..."
                     }
             </remarks>
             <param name="id"></param>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <returns>Updated user data</returns>
             <response code="200">Returns updated address data</response>
             <response code="404">If the corresponding user was not found</response>
             <returns>Updated address data</returns>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.AddressController.Delete(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Deletes a specific address
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>No content</returns>
            <response code="204">If the user was successfully deleted</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.ImageController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns image based on Id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>Specific image by id</returns>
            <response code="200">Returns the specific image data</response>
            <response code="404">If the image was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.ImageController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns all images
            </summary>
            <param name="cancellationToken"></param>
            <returns>specific lits of images</returns>
            <response code="200">Returns the list of images</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.ImageController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.Images.Requests.ImageRequestModel)">
             <summary>
             Creates an image
             </summary>
             <remarks>
             Note id is not required
            
                     POST/Image
                 
                     {
                         "pizzaId":1,
                         "originalName": "Image1",
                         "path": "Image1Path"
                     }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <returns>Returns newly created image</returns>
             <response code="200">Returns the newly created image</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.OrderController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns order based on provided Id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>Specific order</returns>
            <response code="200">Returns the specific order</response>
            <response code="404">If the order was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.OrderController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns list of all orders
            </summary>
            <param name="cancellationToken"></param>
            <returns>List of orders</returns>
            <response code="200">Returns the list of orders</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.OrderController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.Orders.Requests.OrderRequestModel)">
             <summary>
             Creates an order
             </summary>
             <remarks>
             Note id is not required
            
                     POST/Order
                 
                     {
                         "pizzaId":1,
                         "addressId": 7,
                         "userId": 7
                     }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <returns>newly created order</returns>
             <response code="200">Returns the list of orders</response>
             <response code="404">If user,pizza or address was not given correctly</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.PizzaController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns pizza based on id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>Return specific pizza</returns>
            <response code="200">Returns the specific pizza data</response>
            <response code="404">If the pizza was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.PizzaController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns list of pizzas
            </summary>
            <param name="cancellationToken"></param>
            <returns>list of pizzas</returns>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.PizzaController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.Pizzas.Requests.PizzaRequestModel)">
             <summary>
             Creates a pizza
             </summary>
             <remarks>
             Note id is not required
            
                     POST/Pizza
                 
                         {
                             "name": "New Pizza",
                             "description": "New pizza desc",
                             "price": 20,
                             "caloryCount": 300
                         }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <returns>newly created pizza</returns>
             <response code="200">Returns newly created pizza</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.PizzaController.Put(System.Threading.CancellationToken,PizzaRestaurant.Application.Pizzas.Requests.PizzaRequestModel,System.Int32)">
             <summary>
             Updates a specific pizza
             </summary>
             <remarks>
             Note id is required
            
                     POST/Pizza
                 
                         {
                             "name": "Updated Pizza",
                             "description": "Updated pizza desc",
                             "price": 25,
                             "caloryCount": 350
                         }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <param name="id"></param>
             <returns>Updated Pizza data</returns>
             <response code="200">Returns updated pizza</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.PizzaController.Delete(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Deletes a pizza based on Id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>No content</returns>
            <response code="204">If pizza was successfully deleted</response>
            <response code="404">If pizza was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.RankController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns rank based on provided Id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>specific rank</returns>
            <response code="200">Returns the specific rank</response>
            <response code="404">If the rank was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.RankController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns list of all ranks
            </summary>
            <param name="cancellationToken"></param>
            <returns>List of ranks</returns>
            <response code="200">Returns the list of orders</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.RankController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.RankHistories.Requests.RankHistoryRequestModel)">
             <summary>
             Ranks pizza on a scale of 1 to 10
             </summary>
             <remarks>
             Note id is not required
            
                     POST/Rank
                 
                     {
                         "pizzaId":1,
                         "rank": 7,
                         "userId": 7
                     }
             </remarks>
             <param name="cancellationToken"></param>
             <param name="request"></param>
             <returns>newly created rank</returns>
             <response code="200">Successfully ranked pizza</response>
             <response code="404">If the user or pizza was not found </response>
             <response code="400">If the user has not order the pizza</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.UserController.Get(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Returns user by id
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>User data</returns>
            <response code="200">Returns the specific user's data</response>
            <response code="404">If the user was not found</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.UserController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns list of users
            </summary>
            <param name="cancellationToken"></param>
            <returns>list of users</returns>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.UserController.Post(System.Threading.CancellationToken,PizzaRestaurant.Application.Users.Requests.UserRequestModel)">
            <summary>
            Creates user
            </summary>
            <remarks>
            Note that Id is not necessary
            
                POST/User
                
                {
                   "firstName": "ანი",
                    "lastName": "სანიკიძე",
                    "email": "ani@gmail.com",
                    "phoneNumber": "578898586",
                    "addresses": [
                        {
                            "city": "თბილისი",
                            "coutry": "საქართველო",
                            "region": "თბილისი",
                            "description": "აღწერა..."
                        }
                    ]
                }
            </remarks>
            <param name="cancellationToken"></param>
            <param name="request"></param>
            <returns>New Created person's Id</returns>
            <response code="200">Returns the newly created user's data</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.UserController.Put(System.Threading.CancellationToken,PizzaRestaurant.Application.Users.Requests.UpdateUserRequestModel,System.Int32)">
            <summary>
            Updates user
            </summary>
            <remarks>
                PUT/User/:id
                
                {
                   "firstName": "Updated User",
                   "lastName": "Updated User LastName",
                   "email": "updated@gmail.com",
                   "phoneNumber": "578894568"
                }
            </remarks>
            <param name="cancellationToken"></param>
            <param name="request"></param>
            <param name="id"></param>
            <returns>Updated user's data</returns>
            <response code="200">Returns the newly created user's data</response>
        </member>
        <member name="M:PizzaRestaurant.API.Controllers.UserController.Delete(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Deletes user
            </summary>
            <param name="cancellationToken"></param>
            <param name="id"></param>
            <returns>No content</returns>
        </member>
        <member name="T:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.CaloryCountRequired">
            <summary>
              Looks up a localized string similar to Calory count is a mandatory field and must be greater than 0.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.CityRequired">
            <summary>
              Looks up a localized string similar to City name shoud not be empty with maximum length of 20 characters.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.CountryRequired">
            <summary>
              Looks up a localized string similar to Country name shoud not be empty with maximum length of 20 characters.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.DescMaxLength">
            <summary>
              Looks up a localized string similar to Description can not be longer than 100 characters.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.EmailRequired">
            <summary>
              Looks up a localized string similar to Email address is a required field.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.Firstname">
            <summary>
              Looks up a localized string similar to Firstname should consist of at least 2 characters and at most 20.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.InvalidEmail">
            <summary>
              Looks up a localized string similar to Invalid email format.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.InvalidPhoneNumber">
            <summary>
              Looks up a localized string similar to Invalid phone number format.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.Lastname">
            <summary>
              Looks up a localized string similar to Lastname should consist of at least 2 characters and at most 30.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.PizzaNameLength">
            <summary>
              Looks up a localized string similar to Pizza name should consist of at least 2 characters and at most 20.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.PizzaRankLimit">
            <summary>
              Looks up a localized string similar to Pizza can be ranked on a scale of 1 to 10.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.PriceRequired">
            <summary>
              Looks up a localized string similar to Price field is mandatory and must be greater than 0.
            </summary>
        </member>
        <member name="P:PizzaRestaurant.API.Infrastructure.Localizations.ValidationErrorMessages.RegionMaxLength">
            <summary>
              Looks up a localized string similar to Region name can not be longer than 15 characters.
            </summary>
        </member>
    </members>
</doc>
